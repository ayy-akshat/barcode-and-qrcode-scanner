{"version":3,"sources":["screens/ScanScreen.js","App.js"],"names":["ScanScreen","getCameraPermissions","a","async","ExpoPermissions","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","scanData","state","this","console","log","BarCodeScanner","onBarCodeScanned","undefined","style","width","height","View","styles","container","Text","txt","TouchableOpacity","btn","onPress","btnTxt","ScrollView","scanDataTxtContainer","scanDataTxt","React","Component","StyleSheet","create","alignItems","textAlign","justifyContent","borderRadius","backgroundColor","margin","color","fontSize","marginTop","borderColor","borderWidth","padding","maxHeight","overflow","fontFamily","Platform","OS","App"],"mappings":"8tBAKqBA,E,gCAEnB,aACC,IAAD,sBACE,gBA6DFC,qBAAuB,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEIE,IAAyBA,MAF7B,gBAEbC,EAFa,EAEbA,OACR,EAAKC,SAAS,CAACC,qBAAiC,YAAXF,EAAsBG,YAAa,UAAWC,SAAS,IAHvE,6DA9DvB,EAoEAC,qBAAuB,YACvB,EADyBC,KACxB,IAD8BC,EAC/B,EAD+BA,KAE7B,EAAKN,SAAS,CAACG,SAAS,EAAMI,SAAUD,EAAMJ,YAAa,YApE3D,EAAKM,MAAQ,CACXP,qBAAsB,KACtBE,SAAS,EACTI,SAAU,GACVL,YAAa,UANjB,E,kCAUA,WACC,IAAD,OACE,OAAIO,KAAKD,MAAMP,sBAAoD,YAA3BQ,KAAKD,MAAMN,aAEjDQ,QAAQC,IAAIF,KAAKD,OAEf,kBAACI,EAAA,EAAD,CACEC,iBAAkBJ,KAAKD,MAAML,aAAUW,EAAYL,KAAKL,qBACxDW,MAAO,CAACC,MAAO,OAAQC,OAAQ,WAID,WAA3BR,KAAKD,MAAMN,aAElBQ,QAAQC,IAAIF,KAAKD,OAEf,kBAACU,EAAA,EAAD,CAAMH,MAAOI,EAAOC,WAClB,kBAACC,EAAA,EAAD,CAAMN,MAAOI,EAAOG,KACjBb,KAAKD,MAAMP,qBAAuB,uCAAyC,oHAE9E,kBAACsB,EAAA,EAAD,CAAkBR,MAAOI,EAAOK,IAAKC,QAAShB,KAAKd,sBACjD,kBAAC0B,EAAA,EAAD,CAAMN,MAAOI,EAAOO,QAApB,SAIF,kBAACR,EAAA,EAAD,CAAMH,MAAOI,EAAOZ,UAClB,kBAACc,EAAA,EAAD,CAAMN,MAAOI,EAAOG,KACjBb,KAAKD,MAAML,QAAU,aAAe,IAIpC,WAEC,GAAI,EAAKK,MAAML,QAEb,OACE,kBAACwB,EAAA,EAAD,CAAYZ,MAAOI,EAAOS,sBACxB,kBAACP,EAAA,EAAD,CAAMN,MAAOI,EAAOU,aACjB,EAAKrB,MAAMD,SAAW,aAPhC,WAnBN,M,GAzB+BuB,IAAMC,WA6ExCZ,EAASa,IAAWC,OAAO,CAC/Bb,UAAW,CACTc,WAAY,SACZC,UAAW,SACXC,eAAgB,UAElBZ,IAAK,CACHa,aAAc,GACdC,gBAAiB,OACjBtB,MAAO,IACPC,OAAQ,IACRiB,WAAY,SACZE,eAAgB,SAChBG,OAAQ,IAEVb,OAAQ,CACNc,MAAO,QACPC,SAAU,IAEZnB,IAAK,CACHmB,SAAU,GACVC,UAAW,KAEbnC,SAAU,CACRS,MAAO,OACPmB,UAAW,SACXD,WAAY,UAEdN,qBAAsB,CACpBZ,MAAO,MACPqB,aAAc,GACdM,YAAa,OACbC,YAAa,EACbC,QAAS,GACTC,UAAW,IACXC,SAAU,UAEZlB,YAAa,CACXmB,WAA4B,QAAhBC,IAASC,GAAe,gBAAkB,e,mbCpHrCC,E,0HAEnB,WAEE,OACE,kBAAC,EAAD,U,GAL2BrB,IAAMC,Y","file":"static/js/app.1b97f7fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Platform, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport * as ExpoPermissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nexport default class ScanScreen extends React.Component\n{\n  constructor()\n  {\n    super();\n    this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scanData: \"\",\n      buttonState: \"normal\"\n    }\n  }\n\n  render()\n  {\n    if (this.state.hasCameraPermissions && (this.state.buttonState === \"clicked\")) //show the camera to scan\n    {\n      console.log(this.state);\n      return (\n        <BarCodeScanner\n          onBarCodeScanned={this.state.scanned ? undefined : this.handleBarCodeScanned}\n          style={{width: \"100%\", height: \"100%\"}}\n        />\n      )\n    }\n    else if (this.state.buttonState === \"normal\")\n    {\n      console.log(this.state);\n      return (\n        <View style={styles.container}>\n          <Text style={styles.txt}>\n            {this.state.hasCameraPermissions ? \"Press the scan button to scan again.\" : \"Press the scan button to scan.\\nGrant camera permissions if it asks for it.\\nThis does not work on web, however.\"}\n          </Text>\n          <TouchableOpacity style={styles.btn} onPress={this.getCameraPermissions}>\n            <Text style={styles.btnTxt}>\n              Scan\n            </Text>\n          </TouchableOpacity>\n          <View style={styles.scanData}>\n            <Text style={styles.txt}>\n              {this.state.scanned ? \"Scan data:\" : \"\"}\n            </Text>\n\n            {\n              (() => {\n                \n                if (this.state.scanned)\n                {\n                  return (\n                    <ScrollView style={styles.scanDataTxtContainer}>\n                      <Text style={styles.scanDataTxt}>\n                        {this.state.scanData + \"\\n\\n\\n\\n\"}\n                      </Text>\n                    </ScrollView>\n                  )\n                }\n\n              })()\n            }\n          </View>\n        </View>\n      );\n    }\n  }\n\n  getCameraPermissions = async () =>\n  {\n    const { status } = await ExpoPermissions.askAsync(ExpoPermissions.CAMERA);\n    this.setState({hasCameraPermissions: status === \"granted\", buttonState: \"clicked\", scanned: false});\n  }\n  \n  handleBarCodeScanned = ({type, data}) =>\n  {\n    this.setState({scanned: true, scanData: data, buttonState: \"normal\"});\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'center',\n  },\n  btn: {\n    borderRadius: 10,\n    backgroundColor: \"gray\",\n    width: 300,\n    height: 100,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 50,\n  },\n  btnTxt: {\n    color: 'white',\n    fontSize: 40\n  },\n  txt: {\n    fontSize: 25,\n    marginTop: 100\n  },\n  scanData: {\n    width: \"100%\",\n    textAlign: 'center',\n    alignItems: 'center'\n  },\n  scanDataTxtContainer: {\n    width: \"90%\",\n    borderRadius: 30,\n    borderColor: \"gray\",\n    borderWidth: 3,\n    padding: 20,\n    maxHeight: 200,\n    overflow: 'scroll',\n  },\n  scanDataTxt: {\n    fontFamily: Platform.OS === 'ios' ? 'Menlo-Regular' : 'monospace'\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport SS from './screens/ScanScreen';\n\nexport default class App extends React.Component\n{\n  render()\n  {\n    return (\n      <SS/>\n    );\n  }\n}"],"sourceRoot":""}